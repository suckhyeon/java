package p.network;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

public class TCPClinet {

	public static void main(String[] args) {
Scanner sc = new Scanner(System.in);
		
		BufferedReader br = null;
		PrintWriter pw = null;
		
		// 요청하고자하는 서버 IP 구하는법 : 192.168.30.17 내 컴퓨터 포트
		// 포트번호 : 3000
		
		int port = 3000;
		String serverIp = "192.168.30.17";
		
		Socket socket = null;
		
		// 1) 서버로 연결요청을 보내는 구문 (연결을 요청하고자 하는 서버의 ip와 지정된 포트를 전달해주면된다)
		try {
			socket = new Socket(serverIp, port);
			// 만약 통신에 실패하면 null값을 socket객체에 반환해 담긴다.
			
			if(socket != null) {
				System.out.println("서버와 연결 성공");
				
				// 2) 서버와 입출력기반 스트림 생성
				// 3) 보조스트림을 활용해서 성능 개선
				
				
				// 입력용 스트림
				br = new BufferedReader(new InputStreamReader(socket.getInputStream()));
				
				// 출력용 스트림
				pw = new PrintWriter(socket.getOutputStream());
				
				System.out.println("서버에게 보낼 내용 : ");
				String sendMessage = sc.nextLine();
				pw.println(sendMessage); // 입력받은 내용 스트림에 담기
				pw.flush(); // 스트림에 담겨있는 내용을 강제로 보냄
				
				String message = br.readLine();
				System.out.print("서버로부터 전달받은 메세지");
			}
			
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		
		
		
	}

}
